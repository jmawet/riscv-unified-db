# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: mop.rr.n
long_name: May be an OPeration (2 registers).
description: |
  The Zimop extension defines 8 MOP instructions named MOP.RR.n, where n is an integer between 0
  and 7, inclusive. Unless redefined by another extension, these instructions simply write 0 to X[rd].
  Their encoding allows future extensions to define them to read X[rs1] and X[rs2], as well as write X[rd].
definedBy: Zimop
assembly: mop_rr_t_30, mop_rr_t_27_26, xd, xs1, xs2
encoding:
  match: 1-00--1----------100-----1110011
  variables:
    - name: mop_rr_t_30
      location: 30-30
    - name: mop_rr_t_27_26
      location: 27-26
    - name: rs2
      location: 24-20
    - name: rs1
      location: 19-15
    - name: rd
      location: 11-7
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: false
pseudoinstructions:
  - when: (mop_rr_t_30 == 0x0) && (mop_rr_t_27_26 == 0x0)
    to: mop.rr.0
  - when: (mop_rr_t_30 == 0x0) && (mop_rr_t_27_26 == 0x1)
    to: mop.rr.1
  - when: (mop_rr_t_30 == 0x0) && (mop_rr_t_27_26 == 0x2)
    to: mop.rr.2
  - when: (mop_rr_t_30 == 0x0) && (mop_rr_t_27_26 == 0x3)
    to: mop.rr.3
  - when: (mop_rr_t_30 == 0x1) && (mop_rr_t_27_26 == 0x0)
    to: mop.rr.4
  - when: (mop_rr_t_30 == 0x1) && (mop_rr_t_27_26 == 0x1)
    to: mop.rr.5
  - when: (mop_rr_t_30 == 0x1) && (mop_rr_t_27_26 == 0x2)
    to: mop.rr.6
  - when: (mop_rr_t_30 == 0x1) && (mop_rr_t_27_26 == 0x3)
    to: mop.rr.7
operation(): |
  X[rd] = 0;
